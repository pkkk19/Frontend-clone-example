{"version":3,"file":"static/js/894.225b1539.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/MailOutlined.js","../node_modules/@ant-design/icons/es/icons/MailOutlined.js","services/auth.js","views/login/login.js"],"sourcesContent":["// This icon file is generated automatically.\nvar MailOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0068.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z\" } }] }, \"name\": \"mail\", \"theme\": \"outlined\" };\nexport default MailOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MailOutlinedSvg from \"@ant-design/icons-svg/es/asn/MailOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MailOutlined = function MailOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MailOutlinedSvg\n  }));\n};\n\nMailOutlined.displayName = 'MailOutlined';\nexport default /*#__PURE__*/React.forwardRef(MailOutlined);","import request from './request';\n\nconst authService = {\n  login: (data) => request.post('auth/login', data),\n};\n\nexport default authService;\n","import React, { useState } from 'react';\nimport { data } from '../../configs/menu-config';\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Card,\n  Col,\n  Descriptions,\n  Form,\n  Input,\n  notification,\n  Row,\n  Typography,\n} from 'antd';\nimport authService from '../../services/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserData } from '../../redux/slices/auth';\nimport {\n  fetchRestSettings,\n  fetchSettings,\n} from '../../redux/slices/globalSettings';\nimport { useTranslation } from 'react-i18next';\nimport { PROJECT_NAME } from '../../configs/app-global';\nconst { Title } = Typography;\n\nconst credentials = [\n  {\n    login: 'admin@gmail.com',\n    password: 'admin123',\n  },\n  {\n    login: 'manager@gmail.com',\n    password: 'manager123',\n  },\n  {\n    login: 'seller@gmail.com',\n    password: 'seller123',\n  },\n  {\n    login: 'moderator@gmail.com',\n    password: 'moderator123',\n  },\n  {\n    login: 'deliveryman@gmail.com',\n    password: 'deliveryman123',\n  },\n];\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const { settings } = useSelector((state) => state.globalSettings);\n\n  const handleLogin = (values) => {\n    const body = {\n      email: values.email,\n      password: values.password,\n    };\n    setLoading(true);\n    authService\n      .login(body)\n      .then((res) => {\n        const user = {\n          fullName: res.data.user.firstname + ' ' + res.data.user.lastname,\n          role: res.data.user.role,\n          urls: data[res.data.user.role],\n          img: res.data.user.img,\n          token: res.data.access_token,\n          email: res.data.user.email,\n          id: res.data.user.id,\n        };\n        if (user.role === 'user') {\n          notification.error({\n            message: t('ERROR_101'),\n          });\n          return;\n        }\n        localStorage.setItem('token', res.data.access_token);\n        dispatch(setUserData(user));\n        if (user.role === 'admin') {\n          dispatch(fetchSettings());\n        } else {\n          dispatch(fetchRestSettings());\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const copyCredentials = (event, item) => {\n    event.preventDefault();\n    form.setFieldsValue({ email: item.login, password: item.password });\n  };\n\n  return (\n    <div className='login-container'>\n      <div className='container d-flex flex-column justify-content-center h-100'>\n        <Row justify='center' className='w-100'>\n          <Col>\n            <Card className='card'>\n              <div className='my-4 pl-4 pr-4 w-100'>\n                <div className='app-brand text-center'>\n                  <Title className='brand-logo'>\n                    {settings.title || PROJECT_NAME}\n                  </Title>\n                </div>\n                <Row justify='center'>\n                  <Col>\n                    <Form\n                      name='login-form'\n                      layout='vertical'\n                      form={form}\n                      onFinish={handleLogin}\n                      style={{ width: '420px' }}\n                    >\n                      <Form.Item\n                        name='email'\n                        label='Email'\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your Email!',\n                          },\n                        ]}\n                      >\n                        <Input\n                          prefix={\n                            <MailOutlined className='site-form-item-icon' />\n                          }\n                          placeholder='Email'\n                        />\n                      </Form.Item>\n\n                      <Form.Item\n                        name='password'\n                        label='Password'\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your password!',\n                          },\n                        ]}\n                      >\n                        <Input.Password\n                          prefix={\n                            <LockOutlined className='site-form-item-icon' />\n                          }\n                          placeholder='Password'\n                        />\n                      </Form.Item>\n\n                      <Form.Item className='login-input'>\n                        <Button\n                          type='primary'\n                          htmlType='submit'\n                          className='login-form-button'\n                          loading={loading}\n                        >\n                          Login\n                        </Button>\n                      </Form.Item>\n                      {process.env.REACT_APP_IS_DEMO !== 'true' ? (\n                        <Descriptions bordered size='small'>\n                          {credentials.map((item, idx) => (\n                            <React.Fragment key={idx}>\n                              <Descriptions.Item span={2} label={item.login}>\n                                {item.password}\n                              </Descriptions.Item>\n                              <Descriptions.Item span={1}>\n                                <a\n                                  href='/'\n                                  className='copy-link'\n                                  onClick={(event) =>\n                                    copyCredentials(event, item)\n                                  }\n                                >\n                                  Copy\n                                </a>\n                              </Descriptions.Item>\n                            </React.Fragment>\n                          ))}\n                        </Descriptions>\n                      ) : (\n                        ''\n                      )}\n                    </Form>\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n"],"names":["MailOutlined","props","ref","React","AntdIcon","_objectSpread","icon","MailOutlinedSvg","displayName","login","data","request","Title","Typography","credentials","password","t","useTranslation","dispatch","useDispatch","Form","form","useState","loading","setLoading","settings","useSelector","state","globalSettings","className","justify","title","PROJECT_NAME","name","layout","onFinish","values","body","email","authService","then","res","user","fullName","firstname","lastname","role","urls","img","token","access_token","id","localStorage","setItem","setUserData","fetchSettings","fetchRestSettings","notification","message","finally","style","width","label","rules","required","prefix","placeholder","LockOutlined","type","htmlType","process","REACT_APP_IS_DEMO","bordered","size","map","item","idx","span","href","onClick","event","preventDefault","setFieldsValue","copyCredentials"],"sourceRoot":""}